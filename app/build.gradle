apply plugin: 'com.android.application'
apply plugin: 'android-apt'
//apply plugin: 'io.fabric'


android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildTools

    defaultConfig {
        applicationId "com.example.julian.homebrewjournal"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword "******"
            keyAlias "******"
            keyPassword "******"
        }
    }

    buildTypes {
        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        //mock

        //prod

    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Android
    compile "com.android.support:appcompat-v7:$rootProject.supportLibrary"
    compile "com.android.support:customtabs:$rootProject.supportLibrary"
    compile "com.android.support:design:$rootProject.supportLibrary"
    compile "com.android.support:cardview-v7:$rootProject.supportLibrary"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibrary"
    compile "com.android.support:gridlayout-v7:$rootProject.supportLibrary"
    compile "com.google.android.gms:play-services-auth:$rootProject.playServices"

    compile('com.twitter.sdk.android:twitter:2.1.1@aar') {
        transitive = true
    }

    // FireBase
    compile "com.google.firebase:firebase-auth:$rootProject.firebase"
    compile "com.google.firebase:firebase-database:$rootProject.firebase"
    compile "com.firebaseui:firebase-ui-database:$rootProject.firebaseUI"
    compile "com.firebaseui:firebase-ui-auth:$rootProject.firebaseUI"

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junit"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockito"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrest"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runner"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rules"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espresso"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espresso"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espresso") {
        exclude group: 'com.android.support', module: 'support-v4'
    }

    // Other
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espresso"
    compile "com.squareup.picasso:picasso:$rootProject.picasso"
    compile "com.getbase:floatingactionbutton:$rootProject.fab"
    compile "com.jakewharton:butterknife:$rootProject.butterknife"
    apt "com.jakewharton:butterknife-compiler:$rootProject.butterknife"
    compile 'com.facebook.android:facebook-android-sdk:4.14.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    compile 'com.android.support:support-v4:25.3.0'
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibrary"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

apply plugin: 'com.google.gms.google-services'
